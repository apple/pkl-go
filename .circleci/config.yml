# Generated from CircleCI.pkl. DO NOT EDIT.
version: '2.1'
orbs:
  pr-approval: apple/pr-approval@0.1.0
jobs:
  test-windows:
    steps:
    - checkout
    - run:
        command: |-
          echo "Downloading Go"
          Invoke-WebRequest "https://go.dev/dl/go1.21.11.windows-386.msi" -OutFile go.exe

          echo "Installing Go"
          $pkg = "$PWD\go.exe"
          Start-Process msiexec "/i $pkg /qn";

          echo "Installing Pkl"
          Invoke-WebRequest "https://github.com/apple/pkl/releases/download/0.26.0/pkl-windows-amd64.exe" -OutFile pkl.exe
          $env:PKL_EXEC = "$PWD\pkl.exe"

          echo "Running Pkl unit tests"
          .\pkl test --junit-reports test-results\ --project-dir codegen\src\

          echo "Installing go-junit-report"
          go install github.com/jstemmer/go-junit-report/v2@latest

          echo "Running Go unit tests"
          go test -v .\... 2>&1 | go-junit-report -iocopy -set-exit-code -out test-results\go-test-results.xml
        name: go test
        shell: powershell.exe
    resource_class: windows.medium
    machine:
      image: windows-server-2022-gui:current
  build-pkl-gen-go:
    steps:
    - checkout
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-macos-amd64.bin \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build macos amd64
        environment:
          GOOS: darwin
          GOARCH: amd64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-macos-aarch64.bin \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build macos aarch64
        environment:
          GOOS: darwin
          GOARCH: arm64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-linux-amd64.bin \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build linux amd64
        environment:
          GOOS: linux
          GOARCH: amd64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-linux-aarch64.bin \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build linux aarch64
        environment:
          GOOS: linux
          GOARCH: arm64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-windows-amd64.exe \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build windows amd64
        environment:
          GOOS: windows
          GOARCH: amd64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-windows-aarch64.exe \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build windows aarch64
        environment:
          GOOS: windows
          GOARCH: arm64
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"

          go build \
            -o out/pkl-gen-go/pkl-gen-go-windows-amd64.exe \
            -ldflags="-X 'main.Version=$VERSION'" \
            cmd/pkl-gen-go/pkl-gen-go.go
        name: go build windows amd64
        environment:
          GOOS: windows
          GOARCH: amd64
    - persist_to_workspace:
        root: '.'
        paths:
        - out/
    docker:
    - image: cimg/go:1.21
  create-macos-universal-binary:
    steps:
    - attach_workspace:
        at: '.'
    - run:
        command: |-
          lipo \
            -create \
            -output out/pkl-gen-go/pkl-gen-go-macos.bin \
            out/pkl-gen-go/pkl-gen-go-macos-aarch64.bin \
            out/pkl-gen-go/pkl-gen-go-macos-amd64.bin
          rm out/pkl-gen-go/pkl-gen-go-macos-aarch64.bin
          rm out/pkl-gen-go/pkl-gen-go-macos-amd64.bin
        name: Creating universal binary
    - persist_to_workspace:
        root: '.'
        paths:
        - out/pkl-gen-go/
    macos:
      xcode: 15.2.0
  build-pkl-package:
    steps:
    - checkout
    - run:
        command: |-
          curl -L -o pkl.bin 'https://github.com/apple/pkl/releases/download/0.26.0/pkl-linux-amd64'
          chmod +x pkl.bin
          ./pkl.bin project package codegen/src/ --output-path out/pkl-package/
        name: Creating Pkl package
    - persist_to_workspace:
        root: '.'
        paths:
        - out/
    docker:
    - image: cimg/base:2024.01
  do-release:
    steps:
    - checkout
    - attach_workspace:
        at: '.'
    - run:
        command: |-
          # strip preceding "v"
          VERSION="${CIRCLE_TAG:1}"
          EXPECTED_VERSION=$(cat VERSION.txt)

          if [ "${EXPECTED_VERSION}" != "${VERSION}" ]; then
            echo "Mismatching versions!"
            echo "VERSION.txt has ${EXPECTED_VERSION}"
            echo "Inferred version from Git tag is ${VERSION}"
            echo "Update VERSION.txt to match the tag, and re-tag."
            exit 1
          fi

          echo "Creating release for Pkl package"
          gh release create "pkl.golang@${VERSION}" \
            --title "pkl.golang@${VERSION}" \
            --target "${CIRCLE_SHA1}" \
            --notes "This holds the release assets for the pkl.golang Pkl package" \
            --repo "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" \
            out/pkl-package/*

          echo "Creating release for Go library"
          gh release create "${CIRCLE_TAG}" \
            --title "${CIRCLE_TAG}" \
            --target "${CIRCLE_SHA1}" \
            --verify-tag \
            --notes "Release notes: https://pkl-lang.org/go/current/CHANGELOG.html#release-${VERSION}" \
            --repo "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" \
            out/pkl-gen-go/pkl-gen-go-linux-amd64.bin \
            out/pkl-gen-go/pkl-gen-go-linux-aarch64.bin \
            out/pkl-gen-go/pkl-gen-go-macos.bin
        name: gh release
    docker:
    - image: maniator/gh:v2.40.1
  trigger-docsite-build:
    steps:
    - run:
        command: |-
          curl --location \
            --request POST \
            --header "Content-Type: application/json" \
            -u "${CIRCLE_TOKEN}:" \
            --data '{ "branch": "main" }' \
            "https://circleci.com/api/v2/project/github/apple/pkl-lang.org/pipeline"
        name: Triggering docsite build
    docker:
    - image: cimg/base:current
  trigger-package-docs-build:
    steps:
    - run:
        command: |-
          curl --location \
            --request POST \
            --header "Content-Type: application/json" \
            -u "${CIRCLE_TOKEN}:" \
            --data '{ "branch": "main" }' \
            "https://circleci.com/api/v2/project/github/apple/pkl-package-docs/pipeline"
        name: Triggering docsite build
    docker:
    - image: cimg/base:current
workflows:
  prb:
    jobs:
    - hold:
        type: approval
    - pr-approval/authenticate:
        context: pkl-pr-approval
    - test-windows:
        requires:
        - hold
    when:
      matches:
        value: << pipeline.git.branch >>
        pattern: ^pull/\d+(/head)?$
  main:
    jobs:
    - test-windows
    - build-pkl-gen-go:
        requires:
        - test-windows
    - build-pkl-package:
        requires:
        - test-windows
    when:
      equal:
      - main
      - << pipeline.git.branch >>
  release:
    jobs:
    - test-windows:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - build-pkl-gen-go:
        requires:
        - test-windows
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - build-pkl-package:
        requires:
        - test-windows
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - create-macos-universal-binary:
        requires:
        - build-pkl-gen-go
        - build-pkl-package
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - do-release:
        requires:
        - create-macos-universal-binary
        context:
        - pkl-github-release
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - trigger-package-docs-build:
        requires:
        - do-release
        context:
        - pkl-pr-approval
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
    - trigger-docsite-build:
        requires:
        - trigger-package-docs-build
        context:
        - pkl-pr-approval
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v?\d+\.\d+\.\d+$/
